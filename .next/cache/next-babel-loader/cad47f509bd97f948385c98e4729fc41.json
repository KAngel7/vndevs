{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { SITE_NAME } from '../src/constants/env';\nimport 'src/App/style.css';\nexport default class extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const server = !!ctx.req;\n    const out = {\n      server\n    };\n\n    if (Component.getInitialProps) {\n      return _objectSpread({}, out, {\n        pageProps: _objectSpread({}, (await Component.getInitialProps(ctx)))\n      });\n    }\n\n    return out;\n  }\n\n  render() {\n    const {\n      props\n    } = this;\n    const {\n      Component,\n      pageProps\n    } = props;\n    return __jsx(React.Fragment, null, __jsx(\"title\", null, SITE_NAME), __jsx(Component, pageProps));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}